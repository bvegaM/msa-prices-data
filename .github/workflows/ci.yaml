name: CI/CD - Spring Boot with Gradle and Docker

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build Spring Boot App
        run: gradle clean build

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build  # Ejecuta solo si 'build' fue exitoso

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build Spring Boot App
        run: gradle clean build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          JAR_FILE=$(ls build/libs/*.jar)  # Toma el archivo JAR generado
          docker build --build-arg JAR_FILE=${JAR_FILE} -t ${{ secrets.DOCKER_USERNAME }}/prices-data:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/prices-data:latest
